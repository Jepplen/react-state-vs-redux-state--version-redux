[{"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\index.tsx":"1","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reportWebVitals.ts":"2","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\App.tsx":"3","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\MainApp.tsx":"4","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\Main.tsx":"5","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\Header.tsx":"6","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\Footer.tsx":"7","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\Nav.tsx":"8","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reducers\\index.ts":"9","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\actions\\index.ts":"10","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\store.ts":"11","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reducers\\loginReducer.ts":"12","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\Login.tsx":"13","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\ProfileModal.tsx":"14","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\TodoCreator.tsx":"15","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reducers\\addTodoReducer.ts":"16","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\TodoList.tsx":"17","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reducers\\notesReducer.ts":"18","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\TodoItemCard.tsx":"19","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reducers\\categoryReducer.ts":"20","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\utils\\utils.tsx":"21","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\TodoPost.tsx":"22","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reducers\\userReducer.ts":"23","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reducers\\commentReducer.ts":"24","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\CommentCard.tsx":"25","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reducers\\toggleCreatorReducer.ts":"26","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\utils\\localStorage.ts":"27"},{"size":862,"mtime":1613134819249,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":732,"mtime":1611308600591,"results":"31","hashOfConfig":"29"},{"size":335,"mtime":1611309653167,"results":"32","hashOfConfig":"29"},{"size":2301,"mtime":1613309696548,"results":"33","hashOfConfig":"29"},{"size":3437,"mtime":1613333130980,"results":"34","hashOfConfig":"29"},{"size":375,"mtime":1613308877056,"results":"35","hashOfConfig":"29"},{"size":2359,"mtime":1613307767235,"results":"36","hashOfConfig":"29"},{"size":737,"mtime":1613128138869,"results":"37","hashOfConfig":"29"},{"size":402,"mtime":1613127413115,"results":"38","hashOfConfig":"29"},{"size":237,"mtime":1611343598872,"results":"39","hashOfConfig":"29"},{"size":1469,"mtime":1613136386016,"results":"40","hashOfConfig":"29"},{"size":6145,"mtime":1613301310216,"results":"41","hashOfConfig":"29"},{"size":3149,"mtime":1613380058132,"results":"42","hashOfConfig":"29"},{"size":7705,"mtime":1613331522808,"results":"43","hashOfConfig":"29"},{"size":2173,"mtime":1613136680074,"results":"44","hashOfConfig":"29"},{"size":1825,"mtime":1613379710589,"results":"45","hashOfConfig":"29"},{"size":424,"mtime":1613134741369,"results":"46","hashOfConfig":"29"},{"size":4629,"mtime":1613331988412,"results":"47","hashOfConfig":"29"},{"size":599,"mtime":1613136896618,"results":"48","hashOfConfig":"29"},{"size":2899,"mtime":1613220415604,"results":"49","hashOfConfig":"29"},{"size":10913,"mtime":1613328602844,"results":"50","hashOfConfig":"29"},{"size":615,"mtime":1613135876723,"results":"51","hashOfConfig":"29"},{"size":743,"mtime":1612963906922,"results":"52","hashOfConfig":"29"},{"size":1905,"mtime":1613332253260,"results":"53","hashOfConfig":"29"},{"size":645,"mtime":1613136003303,"results":"54","hashOfConfig":"29"},{"size":132,"mtime":1613135343696,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"vhjrqy",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\index.tsx",[],["114","115"],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reportWebVitals.ts",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\App.tsx",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\MainApp.tsx",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\Main.tsx",["116"],"import { styled } from \"@glitz/react\";\r\nimport TodoCreator from \"./TodoCreator\";\r\nimport TodoList from \"./TodoList\";\r\nimport { useState } from \"react\";\r\nimport TodoPost from \"./TodoPost\";\r\n// import { ChangeEvent, useState } from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import * as types from \"../actions/types\";\r\n// import * as actions from \"../actions\";\r\n\r\nconst Main: React.FC = () => {\r\n  const [postShouldShow, setPostShouldShow] = useState(false);\r\n  const [postId, setPostId] = useState(0);\r\n\r\n  const setPost = (value: boolean, id: number) => {\r\n    setPostShouldShow(value);\r\n    setPostId(id);\r\n  };\r\n\r\n  return (\r\n    <MainContent style={{ borderTop: \"1px solid white\" }}>\r\n      {postShouldShow ? (\r\n        <TodoPost closePost={setPost} postId={postId} />\r\n      ) : (\r\n        <TodoCreatorContainer>\r\n          <TodoCreator />\r\n          <TodoList openPost={setPost} postId={postId} />\r\n        </TodoCreatorContainer>\r\n      )}\r\n    </MainContent>\r\n  );\r\n};\r\n\r\nconst Top = styled.div({\r\n  height: \"25px\",\r\n  width: \"100%\",\r\n  backgroundColor: \"#353446\",\r\n  position: \"relative\",\r\n  zIndex: 1,\r\n});\r\n\r\nconst TodoCreatorContainer = styled.div({\r\n  width: \"100vw\",\r\n  //height: \"80vh\",\r\n  backgroundColor: \"#353446\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\",\r\n  // margin: {\r\n  //   top: \"50px\",\r\n  // },\r\n});\r\n\r\nconst MainContent = styled.div({\r\n  padding: {\r\n    top: \"25px\",\r\n    bottom: \"50px\",\r\n  },\r\n  width: \"100vw\",\r\n  minHeight: \"67vh\",\r\n  backgroundColor: \"#353446\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\",\r\n  // margin: {\r\n  //   top: \"50px\",\r\n  // },\r\n});\r\n\r\nexport default Main;\r\n// const mapDispatchToProps = (dispatch: Dispatch) => {\r\n//   return {\r\n//     loginReducer: (username: string) =>\r\n//       dispatch({ type: actions.LOGIN, payload: { username: username } }),\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     authUser: (username: string) => dispatch({type: actions.LOGIN, payload: username}),\r\n//     decrement: (num) => dispatch(actions.decrement(num)),\r\n//     addBug: () => dispatch(actions.addBug()),\r\n//     removeBug: (id) => dispatch(actions.removeBug(id)),\r\n//     resolveBug: (id) => dispatch(actions.resolveBug(id)),\r\n//   };\r\n// };\r\n","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\Header.tsx",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\Footer.tsx",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\Nav.tsx",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reducers\\index.ts",["117"],"import { combineReducers } from \"redux\";\r\nimport { addTodoReducer } from \"./addTodoReducer\";\r\nimport { categoryReducer } from \"./categoryReducer\";\r\nimport { commentReducer } from \"./commentReducer\";\r\nimport { loginReducer } from \"./loginReducer\";\r\nimport { notesReducer } from \"./notesReducer\";\r\nimport { toggleCreatorReducer } from \"./toggleCreatorReducer\";\r\nimport { userReducer } from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user: loginReducer,\r\n  todos: addTodoReducer,\r\n  notes: notesReducer,\r\n  category: categoryReducer,\r\n  users: userReducer,\r\n  //comments: commentReducer,\r\n  showCreator: toggleCreatorReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;\r\n","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\actions\\index.ts",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\store.ts",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reducers\\loginReducer.ts",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\Login.tsx",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\ProfileModal.tsx",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\TodoCreator.tsx",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reducers\\addTodoReducer.ts",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\TodoList.tsx",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reducers\\notesReducer.ts",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\TodoItemCard.tsx",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reducers\\categoryReducer.ts",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\utils\\utils.tsx",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\TodoPost.tsx",["118","119"],"import { styled } from \"@glitz/react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../reducers\";\r\nimport * as types from \"../actions/types\";\r\nimport * as actions from \"../actions\";\r\nimport { useState, useEffect, FormEvent } from \"react\";\r\nimport { getIcon, formatText, humanizeTime } from \"../utils/utils\";\r\nimport CommentCard from \"./CommentCard\";\r\nimport React from \"react\";\r\nimport ProfileModal from \"./ProfileModal\";\r\n\r\nconst emptyUser: types.User = {\r\n  userName: \"\",\r\n  fullName: \"\",\r\n  email: \"\",\r\n  profilePicture: \"\",\r\n  biography: \"\",\r\n};\r\n\r\ntype Props = {\r\n  closePost: (value: boolean, postId: number) => void;\r\n  postId: number;\r\n};\r\n\r\nconst TodoPost: React.FC<Props> = ({ closePost, postId }) => {\r\n  const todos = useSelector<RootState, types.Todos[\"todos\"]>(\r\n    (state) => state.todos.todos\r\n  );\r\n  const users = useSelector<RootState, types.Users[\"users\"]>(\r\n    (state) => state.users.users\r\n  );\r\n  const currentUser = useSelector<RootState, types.User>((state) => state.user);\r\n  const userState = useSelector<RootState, types.UserState>(\r\n    (state) => state.user\r\n  );\r\n  const dispatch = useDispatch();\r\n  const addComment = (comment: types.AddComment) => {\r\n    dispatch(comment);\r\n  };\r\n  const completeTodo = (completed: types.CompleteTodo) => {\r\n    dispatch(completed);\r\n  };\r\n\r\n  const [todo, setTodo] = useState<types.Todo>();\r\n  const [author, setAuthor] = useState<types.User>();\r\n  const [user, setUser] = useState<types.User>();\r\n  const [commentUser, setCommentUser] = useState<types.User>();\r\n  const [showProfile, setShowProfile] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    const ce: types.Comment = {\r\n      comment: input,\r\n      timeStamp: Date.now(),\r\n      authorUserName: currentUser.userName,\r\n    };\r\n\r\n    const cm: types.AddComment = {\r\n      type: actions.ADD_COMMENT,\r\n      payload: {\r\n        todoId: postId,\r\n        comment: ce,\r\n      },\r\n    };\r\n    addComment(cm);\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUser(currentUser);\r\n    const todoFiltered = todos.find((td) => td.id === postId);\r\n    setTodo(todoFiltered);\r\n    const authorFiltered = users.find(\r\n      (user) => user.userName === todoFiltered!.authorUserName\r\n    );\r\n    setAuthor(authorFiltered);\r\n  }, [todos, postId, users, currentUser]);\r\n\r\n  if (!todo) {\r\n    return <div />;\r\n  }\r\n\r\n  const loadProfile = (user: types.User) => {\r\n    setCommentUser(user);\r\n    setShowProfile(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setShowProfile(false);\r\n\r\n    setCommentUser(emptyUser);\r\n  };\r\n\r\n  // if (showProfile) {\r\n  //   if (commentUser) {\r\n  //     return (\r\n  //       <Content>\r\n  //         <ProfileModal user={commentUser} close={closeModal} />\r\n  //       </Content>\r\n  //     );\r\n  //   }\r\n  // }\r\n\r\n  const handleCompleteTodo = () => {\r\n    const completed: types.CompleteTodo = {\r\n      type: actions.COMPLETE_TODO,\r\n      payload: {\r\n        id: todo.id,\r\n        completed: true,\r\n      },\r\n    };\r\n\r\n    completeTodo(completed);\r\n  };\r\n\r\n  return (\r\n    <Content>\r\n      <PostContainer>\r\n        <Header>\r\n          <IconContainer>\r\n            <Icon>\r\n              {getIcon(todo.category, 30)}\r\n              {todo.category}\r\n            </Icon>\r\n          </IconContainer>\r\n          <TitleContainer>{todo.title}</TitleContainer>\r\n          <BackBtn onClick={() => closePost(false, 0)}>Back</BackBtn>\r\n        </Header>\r\n        <Main>\r\n          <MainText>{todo.description}</MainText>\r\n        </Main>\r\n        <Footer>\r\n          <FooterProfilePic src={author?.profilePicture} />\r\n          <FooterText>\r\n            <FooterAuthor onClick={() => loadProfile(author!)}>\r\n              by {todo.authorUserName}\r\n            </FooterAuthor>\r\n            <FooterDate>{humanizeTime(todo.timeStamp)}</FooterDate>\r\n          </FooterText>\r\n        </Footer>\r\n        {todo.completed ? (\r\n          <CompletedTodoText>Completed</CompletedTodoText>\r\n        ) : (\r\n          <CompleteTodoBtn onClick={handleCompleteTodo}>\r\n            Complete quest\r\n          </CompleteTodoBtn>\r\n        )}\r\n      </PostContainer>\r\n      {userState.isAuthed ? (\r\n        <NewCommentContainer onSubmit={handleSubmit}>\r\n          <NewCommentProfilePic src={currentUser?.profilePicture} />\r\n          <NewCommentInput\r\n            onChange={handleChange}\r\n            value={input}\r\n            placeholder={\"Add a comment\"}\r\n          />\r\n          <NewCommentBtn>Comment</NewCommentBtn>\r\n        </NewCommentContainer>\r\n      ) : (\r\n        <NotLoggedIn>\r\n          <NotLoggedText>You need to login to comment on a post.</NotLoggedText>\r\n        </NotLoggedIn>\r\n      )}\r\n      <CommentsContainer>\r\n        {todo.comments.length > 0 ? (\r\n          todo.comments.map((comment) => {\r\n            let commentProfile = users.find(\r\n              (u) => u.userName === comment.authorUserName\r\n            );\r\n\r\n            return (\r\n              <CommentCard\r\n                key={comment.timeStamp}\r\n                loadProfile={loadProfile}\r\n                comment={comment}\r\n                profile={commentProfile ? commentProfile : emptyUser}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <p style={{ color: \"white\" }}>\r\n            No comments, be the first to write one\r\n          </p>\r\n        )}\r\n      </CommentsContainer>\r\n      {showProfile && <ProfileModal user={commentUser!} close={closeModal} />}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default TodoPost;\r\n\r\nconst Icon = styled.div({\r\n  width: \"100%\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  color: \"white\",\r\n});\r\n\r\nconst IconContainer = styled.div({\r\n  position: \"relative\",\r\n  width: \"70px\",\r\n  height: \"60px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"space-between\",\r\n  backgroundColor: \"#21A5C2\",\r\n  border: {\r\n    xy: {\r\n      width: \"1px\",\r\n      color: \"#50646D\",\r\n      style: \"solid\",\r\n    },\r\n  },\r\n\r\n  borderRadius: \"5%\",\r\n  boxSizing: \"border-box\",\r\n  padding: {\r\n    xy: \"10px\",\r\n  },\r\n  fontSize: \"12px\",\r\n});\r\n\r\nconst CompletedTodoText = styled.p({\r\n  padding: {\r\n    y: \"2px\",\r\n  },\r\n  backgroundColor: \"green\",\r\n  color: \"white\",\r\n  margin: { xy: \"0\", top: \"10px\", bottom: \"1px\" },\r\n  textAlign: \"center\",\r\n  borderRadius: \"5px\",\r\n  border: {\r\n    xy: {\r\n      width: \"1px\",\r\n      color: \"#50646D\",\r\n      style: \"solid\",\r\n    },\r\n  },\r\n  boxSizing: \"border-box\",\r\n  fontSize: \"14px\",\r\n});\r\n\r\nconst CompleteTodoBtn = styled.button({\r\n  width: \"100%\",\r\n  height: \"25px\",\r\n  backgroundColor: \"#50646D\",\r\n  color: \"white\",\r\n  border: {\r\n    xy: {\r\n      color: \"none\",\r\n      width: \"none\",\r\n      style: \"none\",\r\n    },\r\n  },\r\n  borderRadius: \"5px\",\r\n  outline: { style: \"none\" },\r\n  \":hover\": {\r\n    backgroundColor: \"#88CAD9\",\r\n  },\r\n  \":active\": {\r\n    backgroundColor: \"#3E7E8F\",\r\n  },\r\n  margin: {\r\n    top: \"10px\",\r\n  },\r\n});\r\n\r\nconst CommentsContainer = styled.div({\r\n  width: \"100%\",\r\n  //height: \"60px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"flex-start\",\r\n  margin: {\r\n    top: \"5px\",\r\n    bottom: \"10px\",\r\n  },\r\n  padding: {\r\n    x: \"10px\",\r\n    y: \"10px\",\r\n  },\r\n  boxSizing: \"border-box\",\r\n  backgroundColor: \"rgba(255,255,255,0.4)\",\r\n  borderRadius: \"5px\",\r\n});\r\n\r\nconst NotLoggedText = styled.p({\r\n  color: \"white\",\r\n});\r\n\r\nconst NotLoggedIn = styled.div({\r\n  width: \"100%\",\r\n  height: \"60px\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n\r\n  margin: {\r\n    top: \"5px\",\r\n    bottom: \"10px\",\r\n  },\r\n  padding: {\r\n    x: \"10px\",\r\n    y: \"10px\",\r\n  },\r\n  boxSizing: \"border-box\",\r\n  backgroundColor: \"rgba(255,255,255,0.4)\",\r\n  borderRadius: \"5px\",\r\n});\r\n\r\nconst NewCommentContainer = styled.form({\r\n  width: \"100%\",\r\n  height: \"60px\",\r\n  display: \"flex\",\r\n  alignItems: \"flex-end\",\r\n  justifyContent: \"space-around\",\r\n\r\n  margin: {\r\n    top: \"5px\",\r\n    bottom: \"10px\",\r\n  },\r\n  padding: {\r\n    x: \"10px\",\r\n    y: \"10px\",\r\n  },\r\n  boxSizing: \"border-box\",\r\n  backgroundColor: \"rgba(255,255,255,0.4)\",\r\n  borderRadius: \"5px\",\r\n});\r\n\r\nconst NewCommentProfilePic = styled.img({\r\n  width: \"7%\",\r\n  borderRadius: \"50%\",\r\n});\r\n\r\nconst NewCommentInput = styled.input({\r\n  width: \"66%\",\r\n});\r\nconst NewCommentBtn = styled.button({\r\n  width: \"75px\",\r\n  height: \"25px\",\r\n  backgroundColor: \"#50646D\",\r\n  color: \"white\",\r\n  border: {\r\n    xy: {\r\n      color: \"none\",\r\n      width: \"none\",\r\n      style: \"none\",\r\n    },\r\n  },\r\n  borderRadius: \"5px\",\r\n  outline: { style: \"none\" },\r\n  \":hover\": {\r\n    backgroundColor: \"#88CAD9\",\r\n  },\r\n  \":active\": {\r\n    backgroundColor: \"#3E7E8F\",\r\n  },\r\n});\r\n\r\nconst PostContainer = styled.div({\r\n  width: \"100%\",\r\n  backgroundColor: \"rgba(255,255,255,0.4)\",\r\n  padding: {\r\n    xy: \"20px\",\r\n  },\r\n  boxSizing: \"border-box\",\r\n  borderRadius: \"5px\",\r\n});\r\nconst Content = styled.div({\r\n  width: \"600px\",\r\n\r\n  padding: {\r\n    xy: \"20px\",\r\n  },\r\n  // display: \"flex\",\r\n  // flexDirection: \"column\",\r\n});\r\n\r\nconst Header = styled.div({\r\n  width: \"100%\",\r\n  height: \"50px\",\r\n  display: \"flex\",\r\n});\r\n\r\n// const IconImg = styled.img({});\r\n// const IconText = styled.img({});\r\n\r\nconst TitleContainer = styled.div({\r\n  width: \"75%\",\r\n  height: \"32px\",\r\n  margin: {\r\n    x: \"25px\",\r\n  },\r\n  fontSize: \"20px\",\r\n  border: {\r\n    bottom: {\r\n      width: \"1px\",\r\n      color: \"#50646D\",\r\n      style: \"solid\",\r\n    },\r\n  },\r\n});\r\n\r\nconst Main = styled.div({});\r\n\r\nconst MainText = styled.p({\r\n  padding: {\r\n    left: \"12%\",\r\n    bottom: \"20px\",\r\n    right: \"10%\",\r\n  },\r\n  margin: {\r\n    x: \"25px\",\r\n  },\r\n});\r\n\r\nconst Footer = styled.div({\r\n  width: \"100%\",\r\n  display: \"flex\",\r\n});\r\n\r\nconst FooterProfilePic = styled.img({\r\n  width: \"10%\",\r\n  borderRadius: \"50%\",\r\n});\r\n\r\nconst FooterText = styled.div({\r\n  margin: { x: \"10px\" },\r\n  width: \"85%\",\r\n  height: \"50px\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"flex-end\",\r\n});\r\n\r\nconst FooterAuthor = styled.div({\r\n  cursor: \"pointer\",\r\n  //color: \"blue\",\r\n  width: \"100%\",\r\n  display: \"flex\",\r\n  alignItems: \"flex-end\",\r\n  fontSize: \"14px\",\r\n});\r\n\r\nconst FooterDate = styled.div({\r\n  width: \"100%\",\r\n  display: \"flex\",\r\n  fontSize: \"12px\",\r\n});\r\n\r\n// const Post = styled.div({\r\n//   width: \"100%\",\r\n//   display: \"flex\",\r\n//   flexDirection: \"column\",\r\n\r\n// });\r\n\r\nconst BackBtn = styled.button({\r\n  width: \"75px\",\r\n  height: \"25px\",\r\n  backgroundColor: \"#50646D\",\r\n  color: \"white\",\r\n  border: {\r\n    xy: {\r\n      color: \"none\",\r\n      width: \"none\",\r\n      style: \"none\",\r\n    },\r\n  },\r\n  borderRadius: \"5px\",\r\n  outline: { style: \"none\" },\r\n  \":hover\": {\r\n    backgroundColor: \"#88CAD9\",\r\n  },\r\n  \":active\": {\r\n    backgroundColor: \"#3E7E8F\",\r\n  },\r\n});\r\n","C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reducers\\userReducer.ts",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reducers\\commentReducer.ts",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\components\\CommentCard.tsx",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\reducers\\toggleCreatorReducer.ts",[],"C:\\Users\\jeppe\\Documents\\EC\\Examensarbete\\thesis-apps\\react-state-vs-redux-state--version-redux\\src\\utils\\localStorage.ts",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":34,"column":7,"nodeType":"126","messageId":"127","endLine":34,"endColumn":10},{"ruleId":"124","severity":1,"message":"128","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":24},{"ruleId":"124","severity":1,"message":"129","line":7,"column":19,"nodeType":"126","messageId":"127","endLine":7,"endColumn":29},{"ruleId":"124","severity":1,"message":"130","line":46,"column":10,"nodeType":"126","messageId":"127","endLine":46,"endColumn":14},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"@typescript-eslint/no-unused-vars","'Top' is assigned a value but never used.","Identifier","unusedVar","'commentReducer' is defined but never used.","'formatText' is defined but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]